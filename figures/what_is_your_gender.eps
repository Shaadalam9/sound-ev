%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 22.12.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 990 510
%%HiResBoundingBox: 0 0 990 510
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font Verdana
/Verdana_sfnts [
<00010000000b008000030030637674204ca24102000000bc000001986670676d
a092abe6000002540000023a676c796616f82cd80000049000000db068656164
d4133d320000124000000036686865610fac09d70000127800000024686d7478
3ec107560000129c000001446c6f63616dd4735a000013e0000000a46d617870
02d102cc0000148400000020707265700870ef40000014a4000002fc76686561
00020801000017a000000024766d747808000000000017c4000000a400>
<061e061405f005d1047c045d03dd00100000ffe7ffe1fe78fe64fe590394001f
0000009600aa00b900c600ce000000000000000000bc00c200000000007600b2
00c000cb0000000000000000000000000081009400a600cc00da00ef00000000
000000000098009e00ab00b000000000000000000000000000900098009e00a4
00a900ae00b300ba00c3000000880091009800a500ac00000000000000000000
006f0087008f009b00a000d3011d00000000000000c3021401c20000000000e9
000c02d10173018e001a002c0044005c0073007e008600b200c8014c001a003d
00440050005c00720078009200b200b900c80000000000000000000000000000
00000000003d0056005d006a006e00b100b900c100000000002a003d00540064
006a00b100b90000000000000071007a008900a100a700bb006f007a00870091
009a000000000000000000000000000000000000008102210221007400e500b9
00ca019502c600ac00a700850614000a000005d1001f0000045d001f00000000
ffe10000fe64fff50000036202f402a2029100af026a004c00>
<401555543736322f2e2d2c26251f141312110d0c0504022c20b0032545234523
61688a204568208a234460442d2c4b525845441b2121592d2c202045684420b0
01602045b0467668188a4560442d2cb0122bb0022545b00225456ab0408b60b0
022523442121212d2cb0132bb0022545b00225456ab8ffc08c60b00225234421
21212d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0
0361592d2cb100032545685458b0032545b0032545606820b004252344b00425
23441bb00325204568208a2344b00325456860b003252344592d2cb003252045
68208a2344b00325456860b0032523442d2cb00943588721c01bb01243588745
b0112bb0472344b0477ae41b038a45186920b04723448a8a8720b0a05158b011
2bb0472344b0477ae41b21b0477ae4595959182d2c4b525845441b2121592d2c
462346608a8a462320468a608a61b8ff8062232010238ab14b4b8a70456020b0
005058b00161b8ffba8b1bb0468c59b0106068013a2d2c2045b003254652583f
1b2111592d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f
2b59b002602d2c0c6423648bb84000626023212d2cb0134358031b02592d2c4b
53234b515a5820458a60441b2121592d2c4b53234b515a58381b2121592d2cb1
020042b123018851b1400188535a58b910000020885458b20201024360425959
2d2cb0024354584b53234b515a58381b2121591b21212121592d000000>
<00020100000007000600000300070014b706020400060204002fcdddcd002fcd
ddcd3130211121112521112101000600fa800500fb000600fa0080050000000000>
<00050095ffe3080705ed000b000f001b00270033009c40720908060a0918061a
0f351808170a1818171a2908260a2918261a460d480f4035560d580f680e1379
1f7625792b76310425512f034f030203031f5109020f030e082b512019401902
19193151130a4f0c400e020c0e2e2a0016011616282a0c0e060f10401002101c
2a0f00010000222a10062f33ed332f5ded2f5d123939ed332f5ded2f2f5d003f
ed332f5ded3f3f3fed332f5ded5d3130015d0114062322263534363332162501
2309011406232226353436333216013426232206151416333236013426232206
1514163332360374bdb2b6babeb2b5ba02b3fcf4a5030c0285beb2b5babdb2b6
bafabb5964665858666459049359646658586664590434e0dadadfe0dadcc0fa
2f05d1fbcce0dadcdde0dada01b8ac8888adad8787fe17ac8888adad8787000000>
<000100a7ffe1047c05f0003d00b8408e0b0b052f1a0b152f290b262f293c3c0b
35143122342f4a0b45144322432f56015905590b552f6a0b662f6a3c780b762f
74357b3c1a343a443a023b3a1e491f012d112d022d2d294a1f0931020f0d1f0d
020d0d114a090a2321370c0c0c025537040d0d025537060c0c0655371e2e1621
032e1e3a37040c031a0c0c0255030c0c0c065503a03f0f3f1f3f020c9a3e10e6
5d10e62b2b11173910ed2f2f2f2b2b2bed003fed332f5d3f1239ed332f5d2ffd
39395d31305d0116161514060706062322262735331616333236373636353426
2726262323353332363534262726262322060723353636333216171616151406
07151616040e303e4a434bcb797cf04d0f55e66b3f8e2c2e2d332d2d804a5a46
98b52e292b623e5fd65f0a47ed6f6da643484aaf77307c02cd2b826766aa3f46
433b23d1384a2a292c6a5150691e1f17a67f7a36511a1a14443ed1233b282c30
885b7cb9180e083300>
<000100bbffe1048505d1002a0097403d0a081a082b083d0835113d164b084411
5a0854296a087a080c1d1d1a490f251f2540250325214a25061e020f0a1f0a02
0a0a0e4a060a2022204f1d011db8ffec402e0b0b02551d160c0c02551d0e0d0d
02551d100c0c06551d142100201d0900160c0c0255009f2c0f2c1f2c02099b2b
10e65d10e62b11393910ed2f2b2b2b2b5ded2f003fed332f5d3f1239ed2f5dfd
322f31305d011406070606232226273533161633323637363635342627262623
2206071121152111363633321617161604854c4248c7837ae24e0e52dc6a4785
342c2d352f34955c58a33b0380fd412b5a2179b64c505801d968be41464b3324
d3344928322b784f4d6a20261f180c02ffaffe740404293437ae000000>
<00020089ffe104a705ed0022003700954038060d160d39253331333749254231
43375f01560d50205021652175310e1a0329491d1313174a1d030f023549030a
1a2c2f12232100120900b8ffeeb40f0f025500b8fff4400b0b0b0255000c0c0c
025500b8ffec400f0d0d0255009c390f391f39022f2109b8fff4b60f0f025509
983810f62bed5d10e62b2b2b2b113910ed2f123939003fed3f1239fd322f2fed
123931305d011400232226272602353412373624333216171523262623220007
363633321617161607342627262623220607060615141617161633323604a7fe
d5d96eb445565d555d580116b93b50290a1c713bd7ff001554a36b5f914c5859
cb373f2e703d55924d020241392e6b3f91a601e3e3fee14443530112c1c60132
77717f0a0dbf0f1bfef3e5333523353dba8d5d7a2d2014282a16291f9eb7352c
29b1000000>
<000100c80000047f05d10009009bb2053502b8ffc040150f0f02550202070135
0803070800034f0b02030300b8ffd4401a0d0d065500640b0f0b010205010c0c
06550514070e1010025507b8fffcb40b0b025507b8ffda400b0f0f0255070809
09025507b8ffeeb40c0c025507b8ffeab40d0d025507b8ffe0b40d0d065507b8
ffecb60c0c0655076c0a10f62b2b2b2b2b2b2b2bfd2b325d10f42b322f5d003f
3fed12392f2bed313001211121152111231121047ffd0f0287fd79c603b70521
fe5cb0fd3305d10000>
<000100c8000005f605d1000c0149405b560a0138023805360a6f0260036f0560
0a7f0270037f05700a0b5509560a5a0b0364037403750903050a020309060200
0204401010025504400909025504400d0d02550004100444045404040404070b
0903010708090a0b030502b8fffa400d0f0f02550214001e1010025500b8fff4
404d0b0b0255000c0f0f0255001009090255000a0c0c0255001a0d0d02550018
0d0d0655000c0c0c065500780e0f0e1f0e500e03050c09090255050c0c0c0255
05040c0c0655051307101010025507b8fffcb40b0b025507b8ffda400b0f0f02
5507080909025507b8ffeeb40c0c025507b8ffeab40d0d025507b8ffeab40d0d
065507b8ffeeb60c0c0655076c0d10f62b2b2b2b2b2b2b2bed2b2b2b5d10f62b
2b2b2b2b2b2b2bed2b111739003f3c3f3c12392f5d2b2b2b435458b434046a04
025d59435458b26404015d591217393130015d72005d72212311012301112311
2101012105f6c6fe6276fe65b9010e018d018001130503fc970369fafd05d1fc
c3033d0000>
<00020068ffe1041d047800260033016940590c0a0423190a1523042b120c0c06
552c120c0c06552d120c0c0655590e511e5c2c690e601d6f2d7b0a7a14701d7b
2c0a0208283d3011401102111120084f1c011c1c183f20043141080a01080f1d
011d112735400909025502b8fff4b40909025502b8fff4b40c0c025502b8fff4
40160c0c0655021a001d0b00061010025500120b0b025500b8ffe640110f0f02
55001809090255001a0d0d025500b8fffcb40c0c025500b8ffe0400b0f0f0655
00120c0c065500b8fff4401509090655000f0d0d06550091350f351f353f3503
2eb8fff8b40d0d02552eb8fff4400d0f0f06552e080c0c06552e1b0bb8fffa40
37101002550b0c0b0b02550b080d0d02550b1c090902550b0c0d0d02550b060c
0c02550b16090906550b060c0c06550b0a0d0d06550b853410f62b2b2b2b2b2b
2b2b2bed2b2b2b5d10e62b2b2b2b2b2b2b2b2b2b113910fd2b2b2b2b32322f5d
003f3fed3fed332f5d1112392f5ded123931305d2b2b2b015d21233506060706
0623222635343637362437353426272626232206072335363633321617161615
03110606070606151416333236041dbb1955282f7a5297d26d6566011ea42d2a
28703d4ab6610a37d06576af403f42bb56e9445164747763a477113d12171fc8
9b7f9d2d2d20081d40541817102725bf0f24272f2e926cfe1d01370514131761
5560614d00>
<0002006affe60460047c0018001f00c8402726042b0d30043b0d3c1e43044b0d
4b1e5a0d50166a0d6017780d7a1e0e013c1f1f0f1c3d15040bb8ffe840190c0c
06550b0b073f0f090c0c21400909025521400c0c025519b8fff6400d0c0c0255
191a00200c0c025500b8fff440440d0d0655008f210f211f213f21031f010c0c
0c0255010a0c0c0655011b12180b0b025512100909025512080c0c025512040d
0d0255120a0c0c065512020d0d065512852010f62b2b2b2b2b2bfd2b2b325d10
f42b2bed2b2b2b332f003fed332f2b3fed12392fed31305d0121141617161633
3236373315060623200011100033321215272626232206070460fcc93e36348f
5672e7310a5fc66dfeeafec8012bf4e2f5b701939697b30c021b67993130305b
2ccd2836012d011501120142fef8f32a94a2b28400>
<000100bb0000017706140003007d4027020101087f05010592000c0909025500
0c0c0c0255000809090655000c0c0c0655001a7f010101b8ffdeb41010025501
b8ffe0400b0f0f0255010c0909025501b8ffeeb40d0d025501b8fff6400b0c0c
025501040909065501b8fff8b60909065501880410f62b2b2b2b2b2b2b5dfd2b
2b2b2be65d003f3f313001212311330177bcbc061400000000>
<000100b900000717047c002b01c8404b032403291324132944204426b72a07b6
2501251f1d1c0817422822041d0501101c08402d011f2d302d402d502d702d05
000c09090255000c0c0c0255000809090655000c0c0c0655001a2db8ffc04017
0f0f02552d400c0c025501181010025501080b0b025501b8ffeab40f0f025501
b8fff440110909025501300c0c0255011c0d0d025501b8fff2b40f0f065501b8
fff0402b0909065501020d0d0655016110250b1c0f0c090902550f0c0c0c0255
0f08090906550f0c0c0c06550f1a10b8fff6400b1010025510080b0b025510b8
ffd240110f0f025510260c0c0255100a0d0d025510b8fff8b40f0f065510b8ff
f8b40909065510b8fffbb40c0c065510b8ffff40210d0d0655101f1a0c090902
551a0c0c0c02551a08090906551a0c0c0c06551a1a1cb8ffdeb4101002551cb8
ffe6400b0f0f02551c0c090902551cb8fff6b40c0c02551cb8ffeeb40d0d0255
1cb8ffee400b0f0f06551c0a090906551cb8fffcb40c0c06551cb8fffc400e0d
0d06551c611f104010801003102f5df42b2b2b2b2b2b2b2b2bfd2b2b2b2b3210
2b2b2b2b2b2b2b2b2bfd2b2b2b2b11393910f42b2b2b2b2b2b2b2b2b2b2bed2b
2b2b2b5d5d003f3c3c3f3f3cfd32111239395d31305d21231134262726262322
0607161615112311342627262623220607112311331536363332161736363332
16150717bc0d151756514f9e4f0304bc0d151756514d9b4dbcbc58af63729f27
72bc6bb8af027c4886282b2c4f3d173d1efd35027c4a85282b2b4c3bfcbe045d
7c495260556055dfc800000000>
<000100000005028fc06d95ac5f0f3cf5001b080000000000aa7e442900000000
c2c3abe8fc0bfd930b93080100000009000200000000000000>
<00010000080bfe5200000c2cfc0bff070b930001000000000000000000000000
0000005100>
<0800010000000000000000000000000000000000000000000000000000000000
089c009500000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000051600a700000000
051600bb05160089000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000049900c8000000000000000000000000000000000000000000000000
06be00c800000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000004ce0068000000000000000000000000
04c4006a000000000000000000000000000000000000000000000000023200bb
07c800b900>
<00000020002000200020002000200020002000c000c000c000c000c000c000c0
00c000c000c000c000c000c000c001740174020202a402a402a402a402a402a4
02a402a402a402a402a402a402a402a402a402a4030803080308030803080308
030803ca03ca03ca03ca03ca03ca03ca03ca03ca03ca03ca03ca03ca03ca03ca
03ca03ca03ca03ca03ca04cc04cc04cc04cc0566056605660566056605660566
05b206d800>
<00010000005100670007006b000500020010002f00560000020a01c80003000100>
<b90054ffc0401eb229323610b220b240b250b270b280b2a0b2b0b2d0b2e0b20a
c0b2f0b202b8ffc04070b51718361f44010f561f56024f555f55026f54019f54
af54025153170452531604535215044a49520446493704474932044849320449
3539043c3f32043d3f3d043e3f2104433f1d04423f5204413f5204403f52043f
35320432336404333534043534540434351e04d034e034f03403b8ffeeb3b425
4836b8ffe0b3b4102336b8ffee400db4090f36b41a480476b386b302b8fff0b3
b3254836b8fffa40ffb3092436b314480489881304706c7078020f9cdf9e0240
9d161936409c161b3640971719364096171b368685131f0f840f850f8e0f8f0f
901f841f8e1f8f2f8e808580888f919085908790880f40820910360f721f7202
4071090c360f6d0120c80120c7013fc6efc60220c540c5020062010062106202
4061a061020f5b012d1411042c1425042b1439042a141304291415041f141e04
2120430420143c04c91a45041a1b47041b1a3c041a1432041514390413144804
12141a0411141a0470140140144143360f0e2a1f0006010dc34b1f0cc24b1f0a
c04b1f09c04b1f05bc4b1f04bd4b1f03b94b1f02ba4b1f01b64b1f00b74b1fc3
c22a1fc0bf2a1fbd4056bc211fbab9211fb7b6211fc2c3c40dbfc0c10dbcbdbe
0cb9babb0cb6b7b80c10bc80bc0240b980b9020fb63fb64fb67fb6040fb62fb6
3fb66fb67fb6bfb6cfb6ffb6080a0937040c0d02050402030202010002500501
b801ff01b0124b004b5442b013014b004b5342b109322b4bb0645242858d8d1d
b0964b5258b0801d59b808004b5458b001b0018e59b0084b5358b001b0018e59
002b2b2b2b2b737473732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb003
45b006456861b006234473b00345b00e456861b00e2344b00e45b00f456861b0
0f23442b01b0144568b01423442b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73
73737373737373732b732b732b2b2b2b2b73732b2b2b2b732b2b2b2b00752b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73747373742b73742b2b00>
<0001000000000000000008000000000000000000000100000000000000000000
0000000100>
<0800000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000>
] def
10 dict begin
/FontName /Verdana_00 def
/FontType 42 def
/FontMatrix [1 0 0 1 0 0] def
/FontBBox [-1013 -621 2963 2049] def
/PaintType 0 def
/sfnts Verdana_sfnts def
/Encoding 256 array
dup 0 /c00 put
dup 1 /c01 put
dup 2 /c02 put
dup 3 /c03 put
dup 4 /c04 put
dup 5 /c05 put
dup 6 /c06 put
dup 7 /c07 put
dup 8 /c08 put
dup 9 /c09 put
dup 10 /c0a put
dup 11 /c0b put
dup 12 /c0c put
dup 13 /c0d put
dup 14 /c0e put
dup 15 /c0f put
dup 16 /c10 put
dup 17 /c11 put
dup 18 /c12 put
dup 19 /c13 put
dup 20 /c14 put
dup 21 /c15 put
dup 22 /c16 put
dup 23 /c17 put
dup 24 /c18 put
dup 25 /c19 put
dup 26 /c1a put
dup 27 /c1b put
dup 28 /c1c put
dup 29 /c1d put
dup 30 /c1e put
dup 31 /c1f put
dup 32 /c20 put
dup 33 /c21 put
dup 34 /c22 put
dup 35 /c23 put
dup 36 /c24 put
dup 37 /c25 put
dup 38 /c26 put
dup 39 /c27 put
dup 40 /c28 put
dup 41 /c29 put
dup 42 /c2a put
dup 43 /c2b put
dup 44 /c2c put
dup 45 /c2d put
dup 46 /c2e put
dup 47 /c2f put
dup 48 /c30 put
dup 49 /c31 put
dup 50 /c32 put
dup 51 /c33 put
dup 52 /c34 put
dup 53 /c35 put
dup 54 /c36 put
dup 55 /c37 put
dup 56 /c38 put
dup 57 /c39 put
dup 58 /c3a put
dup 59 /c3b put
dup 60 /c3c put
dup 61 /c3d put
dup 62 /c3e put
dup 63 /c3f put
dup 64 /c40 put
dup 65 /c41 put
dup 66 /c42 put
dup 67 /c43 put
dup 68 /c44 put
dup 69 /c45 put
dup 70 /c46 put
dup 71 /c47 put
dup 72 /c48 put
dup 73 /c49 put
dup 74 /c4a put
dup 75 /c4b put
dup 76 /c4c put
dup 77 /c4d put
dup 78 /c4e put
dup 79 /c4f put
dup 80 /c50 put
readonly def
/CharStrings 257 dict dup begin
/.notdef 0 def
/c00 0 def
/c01 1 def
/c02 2 def
/c03 3 def
/c04 4 def
/c05 5 def
/c06 6 def
/c07 7 def
/c08 8 def
/c09 9 def
/c0a 10 def
/c0b 11 def
/c0c 12 def
/c0d 13 def
/c0e 14 def
/c0f 15 def
/c10 16 def
/c11 17 def
/c12 18 def
/c13 19 def
/c14 20 def
/c15 21 def
/c16 22 def
/c17 23 def
/c18 24 def
/c19 25 def
/c1a 26 def
/c1b 27 def
/c1c 28 def
/c1d 29 def
/c1e 30 def
/c1f 31 def
/c20 32 def
/c21 33 def
/c22 34 def
/c23 35 def
/c24 36 def
/c25 37 def
/c26 38 def
/c27 39 def
/c28 40 def
/c29 41 def
/c2a 42 def
/c2b 43 def
/c2c 44 def
/c2d 45 def
/c2e 46 def
/c2f 47 def
/c30 48 def
/c31 49 def
/c32 50 def
/c33 51 def
/c34 52 def
/c35 53 def
/c36 54 def
/c37 55 def
/c38 56 def
/c39 57 def
/c3a 58 def
/c3b 59 def
/c3c 60 def
/c3d 61 def
/c3e 62 def
/c3f 63 def
/c40 64 def
/c41 65 def
/c42 66 def
/c43 67 def
/c44 68 def
/c45 69 def
/c46 70 def
/c47 71 def
/c48 72 def
/c49 73 def
/c4a 74 def
/c4b 75 def
/c4c 76 def
/c4d 77 def
/c4e 78 def
/c4f 79 def
/c50 80 def
end readonly def
FontName currentdict end definefont pop
16 dict begin
/FontName /Verdana def
/FontType 0 def
/FontMatrix [1 0 0 1 0 0] def
/FMapType 2 def
/Encoding [
0
] def
/FDepVector [
/Verdana_00 findfont
] def
FontName currentdict end definefont pop
%%EndResource
/F4_0 /Verdana 0 pdfMakeFont16
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 990 510 re
W
q
[0.24 0 0 -0.24 0 510] cm
q
0 0 4125 2125 re
W*
q
[3.125 0 0 3.125 0 0] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
0 0 1320 680 re
f
Q
Q
q
0 0 4125 2125 re
W*
q
[3.125 0 0 3.125 0 0] cm
/DeviceRGB {} CS
[0.3882 0.4314 0.9804] SC
/DeviceRGB {} cs
[0.3882 0.4314 0.9804] sc
603.5 355 m
603.5 40 l
610.2027 40 616.89862 40.213715 623.58765 40.641148 c
630.27673 41.068581 636.94537 41.708858 643.59357 42.561981 c
650.24182 43.415112 656.85602 44.479347 663.43622 45.754692 c
670.01648 47.030037 676.54932 48.513897 683.03485 50.206268 c
689.52039 51.898647 695.94537 53.796093 702.30981 55.898605 c
708.67426 58.001122 714.96509 60.304424 721.18243 62.808517 c
727.39978 65.312614 733.53101 68.012405 739.57605 70.90789 c
745.62103 73.803375 751.56757 76.888649 757.41565 80.163727 c
763.26373 83.438812 769.0014 86.897026 774.62872 90.538376 c
780.2561 94.179733 785.7616 97.996811 791.14526 101.989601 c
796.52893 105.982391 801.77979 110.142784 806.89789 114.470764 c
812.01599 118.798752 816.99084 123.285522 821.82245 127.931076 c
826.65411 132.57663 831.33276 137.371506 835.85834 142.315735 c
840.38397 147.259964 844.74731 152.343445 848.94836 157.566193 c
853.14948 162.788956 857.17981 168.14037 861.03925 173.62039 c
864.89874 179.10042 868.57953 184.69792 872.08167 190.4129 c
875.5838 196.1279 878.90021 201.94875 882.03082 207.87544 c
885.16138 213.80212 888.09979 219.8226 890.84607 225.93687 c
893.59235 232.05115 896.14081 238.24677 898.49158 244.52373 c
900.84235 250.80067 902.99054 257.14618 904.93616 263.56027 c
906.8819 269.97437 908.62109 276.44397 910.15381 282.96909 c
911.68652 289.4942 913.00958 296.06152 914.12299 302.67108 c
915.23645 309.28067 916.13812 315.91901 916.82788 322.58612 c
917.51764 329.25323 917.99402 335.93555 918.25714 342.63309 c
918.52032 349.33063 918.5697 356.02975 918.40521 362.73044 c
918.24072 369.43115 917.86267 376.11975 917.27118 382.7963 c
916.67975 389.47287 915.87604 396.12378 914.85999 402.74899 c
913.84393 409.37427 912.61768 415.96036 911.18121 422.50732 c
909.74475 429.05432 908.10107 435.54883 906.25006 441.99088 c
904.39905 448.43292 902.34448 454.80936 900.08636 461.12024 c
897.82837 467.43115 895.3714 473.66364 892.71545 479.81766 c
890.05951 485.97171 887.21008 492.03482 884.16711 498.00699 c
881.12421 503.97916 877.89392 509.84824 874.47632 515.6142 c
871.05865 521.38013 867.46069 527.03119 863.68231 532.56744 c
859.90399 538.10376 855.95294 543.51392 851.82922 548.79797 c
847.70551 554.08203 843.41748 559.22919 838.96515 564.2395 c
834.51288 569.24982 829.9054 574.1131 825.14264 578.82935 c
820.37994 583.54559 815.47168 588.1051 810.41785 592.50793 c
805.36407 596.91083 800.17511 601.14813 794.85083 605.21973 c
789.52655 609.29138 784.07788 613.18909 778.5047 616.9129 c
772.93164 620.63672 767.24548 624.17908 761.44623 627.53992 c
755.64703 630.90076 749.74652 634.0733 743.74475 637.0575 c
737.74298 640.04169 731.65222 642.83142 725.47247 645.42682 c
719.2926 648.02222 713.03632 650.41791 706.70355 652.61389 c
700.37079 654.80994 693.97449 656.80182 687.51459 658.58954 c
681.05469 660.3772 674.54431 661.95709 667.98358 663.32922 c
661.42285 664.70135 654.82501 665.86285 648.19006 666.81384 c
641.55518 667.76477 634.89673 668.50317 628.21466 669.02899 c
621.53265 669.55493 614.84064 669.86719 608.13867 669.96588 c
601.43671 670.06464 594.7384 669.94958 588.04376 669.62067 c
581.34912 669.29175 574.67181 668.74976 568.01178 667.99463 c
561.35181 667.2395 554.7226 666.27277 548.12427 665.09442 c
541.52594 663.91614 534.97192 662.52869 528.46216 660.93195 c
521.95239 659.33527 515.50018 657.53265 509.1055 655.52405 c
502.71082 653.5155 496.38669 651.30511 490.13312 648.89282 c
483.87955 646.48053 477.70926 643.87134 471.62222 641.06512 c
465.53522 638.25897 459.54388 635.2616 453.64822 632.073 c
447.75253 628.88446 441.96451 625.51111 436.28418 621.95294 c
430.60385 618.3949 425.04276 614.6593 419.60089 610.74622 c
414.15903 606.83313 408.84744 602.75049 403.66617 598.49829 c
398.48492 594.24615 393.44455 589.83313 388.54498 585.25928 c
383.64542 580.68536 378.89667 575.95984 374.29877 571.08282 c
369.70087 566.20575 365.26315 561.18707 360.9856 556.02673 c
356.70804 550.86639 352.5994 545.57495 348.65967 540.15234 c
603.5 355 l
h
f
Q
q
[3.125 0 0 3.125 2324.48 1347.66724] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 -1 -14.085938 0] Tm
0 0 Td
/F4_0 12 Tf
(\000\031\000\030\000\010)
[7.628906
0
7.628906
0
12.914063
0] Tj
Q
q
[3.125 0 0 3.125 0 0] cm
/DeviceRGB {} CS
[0.9373 0.3333 0.2314] SC
/DeviceRGB {} cs
[0.9373 0.3333 0.2314] sc
603.5 355 m
348.65967 540.15234 l
344.41663 534.31232 340.37909 528.33344 336.54709 522.21582 c
332.71509 516.09821 329.09769 509.85623 325.69482 503.48993 c
322.29196 497.1236 319.11169 490.64795 316.15405 484.06302 c
313.19638 477.47809 310.46829 470.79938 307.96979 464.02689 c
305.47128 457.25436 303.20822 450.40405 301.18066 443.47598 c
299.15311 436.54788 297.36578 429.55835 295.81876 422.50739 c
294.27173 415.45642 292.9686 408.36066 291.90942 401.22006 c
290.85022 394.0795 290.03745 386.91101 289.47107 379.7146 c
288.90469 372.51816 288.58609 365.31076 288.5152 358.09244 c
288.44434 350.87408 288.6214 343.6618 289.04636 336.45566 c
289.47131 329.24951 290.14319 322.06644 291.06198 314.90643 c
291.98077 307.74646 293.14435 300.6265 294.55264 293.54651 c
295.96094 286.46652 297.61066 279.44327 299.5018 272.47672 c
301.39294 265.51013 303.52106 258.6167 305.88614 251.79646 c
308.25119 244.9762 310.84763 238.24519 313.67545 231.60344 c
316.50323 224.96167 319.55576 218.42485 322.83298 211.99297 c
326.11017 205.56107 329.60434 199.24927 333.31549 193.0576 c
337.02664 186.86592 340.94598 180.80898 345.07355 174.88676 c
349.20111 168.96455 353.52713 163.19104 358.05164 157.566223 c
362.57611 151.941422 367.28839 146.478592 372.18848 141.17775 c
377.08853 135.876907 382.16479 130.750565 387.41727 125.798706 c
392.66974 120.846848 398.08606 116.081177 403.66617 111.501694 c
409.24628 106.922203 414.97705 102.539711 420.85846 98.354218 c
426.73987 94.168716 432.75806 90.190094 438.91299 86.418343 c
445.0679 82.646584 451.34506 79.090607 457.74445 75.750404 c
464.14389 72.410202 470.65042 69.293663 477.2641 66.400787 c
483.87778 63.507908 490.58295 60.845516 497.37967 58.413612 c
504.17639 55.981712 511.04858 53.786041 517.99628 51.826599 c
524.94391 49.867153 531.95062 48.148563 539.01648 46.67083 c
546.08228 45.193092 553.19049 43.959702 560.34106 42.970654 c
567.49164 41.981606 574.66772 41.239231 581.86945 40.743538 c
589.07104 40.247845 596.28125 40 603.5 40 c
603.5 355 l
h
f
Q
q
[3.125 0 0 3.125 1422.11853 887.89117] cm
/DeviceRGB {} CS
[0.2667 0.2667 0.2667] SC
/DeviceRGB {} cs
[0.2667 0.2667 0.2667] sc
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 -1 -14.085938 0] Tm
0 0 Td
/F4_0 12 Tf
(\000\026\000\030\000\010)
[7.628906
0
7.628906
0
12.914063
0] Tj
Q
q
[3.125 0 0 3.125 3814.8125 125] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
0 0 89 48 re
f
Q
Q
q
3814.8125 125 278.125 150 re
W*
q
[3.125 0 0 3.125 3814.8125 170.3125] cm
/DeviceRGB {} CS
[0.1647 0.2471 0.3725] SC
/DeviceRGB {} cs
[0.1647 0.2471 0.3725] sc
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 -1 40 4.68] Tm
0 0 Td
/F4_0 12 Tf
(\0000\000D\000O\000H)
[10.113281
0
7.207031
0
3.292969
0
7.148438
0] Tj
Q
q
[3.125 0 0 3.125 3877.3125 170.3125] cm
/DeviceRGB {} CS
[0.3882 0.4314 0.9804] SC
/DeviceRGB {} cs
[0.3882 0.4314 0.9804] sc
-6 -6 12 12 re
f
Q
q
[3.125 0 0 3.125 3814.8125 229.6875] cm
/DeviceRGB {} CS
[0.1647 0.2471 0.3725] SC
/DeviceRGB {} cs
[0.1647 0.2471 0.3725] sc
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 -1 40 4.68] Tm
0 0 Td
/F4_0 12 Tf
(\000\)\000H\000P\000D\000O\000H)
[6.896484
0
7.148438
0
11.671875
0
7.207031
0
3.292969
0
7.148438
0] Tj
Q
q
[3.125 0 0 3.125 3877.3125 229.6875] cm
/DeviceRGB {} CS
[0.9373 0.3333 0.2314] SC
/DeviceRGB {} cs
[0.9373 0.3333 0.2314] sc
-6 -6 12 12 re
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font Verdana
%%EOF
